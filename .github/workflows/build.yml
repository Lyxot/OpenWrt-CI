name: OpenWrt-CI

on:
  workflow_dispatch:
    inputs:
      enable_debug:
        description: 'Enable Debug Session'
        required: false
        type: boolean
        default: false
  schedule:
    - cron: '0 20 * * 0,4'

jobs:
  check_update:
    name: Check Update
    runs-on: ubuntu-latest
    outputs:
      current: ${{ steps.check_update.outputs.current }}
      latest: ${{ steps.check_update.outputs.latest }}
      release_tag: ${{ steps.check_update.outputs.release_tag }}
    steps:
      - name: Check
        id: check_update
        run: |
          export current=$(curl -s "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest" | jq -r '.body' | sed -n '2{s/.*\.\.\.//;p}' | tr -d '\r\n')
          echo "current=$current" | tee -a $GITHUB_OUTPUT
          echo "latest=$(curl -s 'https://api.github.com/repos/immortalwrt/immortalwrt/commits/master' | jq -r '.sha' | cut -c1-7)" | tee -a $GITHUB_OUTPUT
          echo "release_tag=$(curl -s 'https://api.github.com/repos/immortalwrt/immortalwrt/tags' | jq -r '.[0].name')" | tee -a $GITHUB_OUTPUT

  build_openwrt:
    name: Build OpenWrt Firmware
    runs-on: ubuntu-24.04
    needs: check_update
    if: needs.check_update.outputs.current != needs.check_update.outputs.latest
    env:
      TZ: Asia/Shanghai
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 64

      - name: Set tmpfs
        run: sudo mount -t tmpfs -o size=64G tmpfs .

      - name: Checkout OpenWrt
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          sudo -E timedatectl set-timezone "Asia/Shanghai"
          wget https://github.com/$GITHUB_REPOSITORY/raw/refs/heads/main/setmirrors.py
          python3 setmirrors.py
          df -h

      - name: Setup Debug Session
        if: github.event.inputs.enable_debug == 'true'
        uses: mxschmitt/action-tmate@v3

      - name: Update feeds
        run: |
          sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default
          ./scripts/feeds update -a
          rm -rf feeds/smpackage/{base-files,dnsmasq,firewall*,fullconenat,libnftnl,nftables,ppp,opkg,ucl,upx,vsftpd*,miniupnpd-iptables,wireless-regdb}
          ./scripts/feeds install -a
          
      - name: Download configuration file
        run: |
          wget https://github.com/$GITHUB_REPOSITORY/raw/refs/heads/main/.config
          export version=$(echo ${{ needs.check_update.outputs.release_tag }} | sed 's/v//')
          cp .config .config.raw
          echo "CONFIG_VERSION_NUMBER=\"$version\"" >> .config
          echo "CONFIG_VERSION_REPO=\"https://github.com/$GITHUB_REPOSITORY/releases\"" >> .config
          make defconfig
          diff .config .config.raw | tee .config.diff || :
          export diff_count=$(grep -c "^[<>]" .config.diff)
          echo "diff_count=$diff_count"
          if [[ $diff_count -gt 60 ]]; then
            echo "Too many changes! Please check the configuration file."
            exit 1
          fi

      - name: Download packages
        run: make download V=s -j1

      - name: Patch
        run: |
          if ! grep -q "CONFIG_X86_SGX" target/linux/x86/64/config-6.6; then
            echo "# CONFIG_X86_SGX is not set" >> target/linux/x86/64/config-6.6
          fi
          export param=$(cat package/base-files/files/usr/lib/os-release | grep BUILD_DATE | sed 's/.*=//')
          echo "BUILD_DATE=$param" >> package/base-files/files/usr/lib/os-release
          cat > feeds/smpackage/luci-app-ota/root/etc/config/ota <<EOF

          config ota 'config'
                  option api_url 'https://github.com/$GITHUB_REPOSITORY/releases/latest/download/fw.json'
          EOF
          sed -i 's/curl /curl -L /g' feeds/smpackage/luci-app-ota/root/bin/ota
          
      - name: Compile OpenWrt
        run: |
          alias mkdir='mkdir -p'
          make V=s -j1 || make V=s -j1 || make V=s -j1

      - name: Clean up
        id: clean
        run: |
          rm -rf staging_dir build_dir .ccache dl
          ls bin/targets/x86/64
          df -h

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./bin/targets/x86/64/*.buildinfo

      - name: Upload ext4 images
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_ext4_images
          path: |
            ./bin/targets/x86/64/immortalwrt-x86-64-generic-ext4-combined-efi.*

      - name: Upload squashfs images
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_squashfs_images
          path: |
            ./bin/targets/x86/64/immortalwrt-x86-64-generic-squashfs-combined-efi.*

      - name: Upload rootfs
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_rootfs
          path: ./bin/targets/x86/64/immortalwrt-x86-64-generic-rootfs.tar.gz

      - name: Prepare release
        run: |
          mkdir -p release
          cat > release/fw.json <<EOF
          {
            "x86_64": [
              {
                "build_date": "$(./scripts/get_source_date_epoch.sh)",
                "sha256sum": "$(sha256sum bin/targets/x86/64/immortalwrt-x86-64-generic-squashfs-combined-efi.img.gz | awk '{print $1}')",
                "url": "https://github.com/$GITHUB_REPOSITORY/releases/download/${{ needs.check_update.outputs.release_tag }}/immortalwrt-x86-64-generic-squashfs-combined-efi.img.gz"
              }
            ]
          }
          EOF
          cat release/fw.json
          echo "**Update Time**: $(date -d @$(./scripts/get_source_date_epoch.sh) -Iseconds)" > changelog.md
          echo "**Full Changelog**: https://github.com/immortalwrt/immortalwrt/compare/${{ needs.check_update.outputs.current }}...$(git rev-parse --short HEAD)" >> changelog.md
          cat changelog.md
          mv ./bin/targets/x86/64/immortalwrt-x86-64-generic-ext4-combined-efi.* release/
          mv ./bin/targets/x86/64/immortalwrt-x86-64-generic-squashfs-combined-efi.* release/
          mv ./bin/targets/x86/64/immortalwrt-x86-64-generic-rootfs.tar.gz release/

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          bodyFile: "changelog.md"
          removeArtifacts: true
          tag: ${{ needs.check_update.outputs.release_tag }}
          makeLatest: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "release/*"
